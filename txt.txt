/*
  # Fix Profile Access Policies

  1. Changes
    - Simplify profile access policies to prevent recursion
    - Remove circular dependencies in RLS policies
    - Maintain secure access control

  2. Security
    - Enable RLS on profiles table
    - Add simplified policies for profile access
    - Ensure proper authentication checks
*/

-- Drop existing profile policies to start fresh
DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON profiles;
DROP POLICY IF EXISTS "Enable read access for authenticated users" ON profiles;
DROP POLICY IF EXISTS "Enable update for users based on id" ON profiles;

-- Create new simplified policies
CREATE POLICY "Allow users to read their own profile"
ON profiles FOR SELECT
                                          TO authenticated
                                          USING (auth.uid() = id);

CREATE POLICY "Allow users to update their own profile"
ON profiles FOR UPDATE
                           TO authenticated
                           USING (auth.uid() = id)
                WITH CHECK (auth.uid() = id);

CREATE POLICY "Allow users to insert their own profile"
ON profiles FOR INSERT
TO authenticated
WITH CHECK (auth.uid() = id);

-- Add policy for admins and managers to read all profiles
CREATE POLICY "Allow admins and managers to read all profiles"
ON profiles FOR SELECT
                                  TO authenticated
                                  USING (
                                  EXISTS (
                                  SELECT 1
                                  FROM auth.users
                                  WHERE auth.users.id = auth.uid()
                                  AND auth.users.raw_user_meta_data->>'role' IN ('admin', 'manager')
                                  )
                                  );

CREATE POLICY "Allow all users to access their own data"
       ON auth.users
       FOR SELECT
               USING (auth.uid() = id);